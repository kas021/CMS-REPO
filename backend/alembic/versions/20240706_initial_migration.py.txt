"""Initial migration

Revision ID: 20240706
Revises: 
Create Date: 2024-07-06 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '20240706'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_name'), 'api_keys', ['name'], unique=True)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('accountRef', sa.String(), nullable=True),
    sa.Column('paymentTerms', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('accountRef')
    )
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_index(op.f('ix_customers_name'), 'customers', ['name'], unique=False)
    op.create_table('drivers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('vehicleType', sa.String(), nullable=True),
    sa.Column('vehicleRegistration', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vehicleRegistration')
    )
    op.create_index(op.f('ix_drivers_id'), 'drivers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('driver_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_driver_locations_id'), 'driver_locations', ['id'], unique=False)
    op.create_table('jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mainSource', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('awbRef', sa.String(), nullable=False),
    sa.Column('shipStatus', sa.Enum('NORMAL', 'PRIORITY', name='shipstatus'), nullable=True),
    sa.Column('pickupAddress', sa.Text(), nullable=False),
    sa.Column('deliveryAddress', sa.Text(), nullable=False),
    sa.Column('orderDateTime', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('dueDateTime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('pcs', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('dimensionH', sa.Float(), nullable=True),
    sa.Column('dimensionL', sa.Float(), nullable=True),
    sa.Column('dimensionW', sa.Float(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('vehicle', sa.String(), nullable=True),
    sa.Column('calculationMethod', sa.Enum('PIECES', 'WEIGHT', 'DIMENSION', 'DISTANCE', 'OTHER', name='calculationmethod'), nullable=True),
    sa.Column('finalRate', sa.Float(), nullable=True),
    sa.Column('referredBy', sa.String(), nullable=True),
    sa.Column('referredByEmail', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ASSIGNED', 'COMPLETED', 'CANCELLED', name='jobstatus'), nullable=True),
    sa.Column('emailFrom', sa.String(), nullable=True),
    sa.Column('customerId', sa.Integer(), nullable=True),
    sa.Column('driverId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customerId'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jobs_awbRef'), 'jobs', ['awbRef'], unique=False)
    op.create_index(op.f('ix_jobs_id'), 'jobs', ['id'], unique=False)
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_ref', sa.String(), nullable=False),
    sa.Column('invoiceDate', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('dueDate', sa.DateTime(timezone=True), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('vatAmount', sa.Float(), nullable=False),
    sa.Column('totalAmount', sa.Float(), nullable=False),
    sa.Column('paidAmount', sa.Float(), nullable=True),
    sa.Column('credit_applied', sa.Float(), nullable=True),
    sa.Column('outstandingAmount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('UNPAID', 'PARTIALLY_PAID', 'PAID', 'SETTLED_WITH_CREDIT', name='invoicestatus'), nullable=True),
    sa.Column('jobId', sa.Integer(), nullable=True),
    sa.Column('customerId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customerId'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['jobId'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('jobId')
    )
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_index(op.f('ix_invoices_invoice_ref'), 'invoices', ['invoice_ref'], unique=True)
    op.create_index(op.f('ix_invoices_status'), 'invoices', ['status'], unique=False)
    op.create_table('credit_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creditNoteRef', sa.String(), nullable=False),
    sa.Column('customerId', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('JOB_BASED', 'ACCOUNT_BASED', name='creditnotetype'), nullable=False),
    sa.Column('invoiceId', sa.Integer(), nullable=True),
    sa.Column('initialAmount', sa.Float(), nullable=False),
    sa.Column('remainingAmount', sa.Float(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('createdAt', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'DEPLETED', 'VOIDED', name='creditnotestatus'), nullable=False),
    sa.ForeignKeyConstraint(['customerId'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['invoiceId'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_notes_creditNoteRef'), 'credit_notes', ['creditNoteRef'], unique=True)
    op.create_index(op.f('ix_credit_notes_id'), 'credit_notes', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('invoiceId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoiceId'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('credit_note_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('appliedAmount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_note_applications_id'), 'credit_note_applications', ['id'], unique=False)
    op.create_table('credit_note_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.Enum('CREATED', 'APPLIED_TO_INVOICE', 'REVERSED_FROM_INVOICE', 'VOIDED', 'EDITED_REASON', 'EDITED_BALANCE', 'MANUAL_APPLICATION', name='creditnoteaction'), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_note_history_id'), 'credit_note_history', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_credit_note_history_id'), table_name='credit_note_history')
    op.drop_table('credit_note_history')
    op.drop_index(op.f('ix_credit_note_applications_id'), table_name='credit_note_applications')
    op.drop_table('credit_note_applications')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_credit_notes_id'), table_name='credit_notes')
    op.drop_index(op.f('ix_credit_notes_creditNoteRef'), table_name='credit_notes')
    op.drop_table('credit_notes')
    op.drop_index(op.f('ix_invoices_status'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_invoice_ref'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_id'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_awbRef'), table_name='jobs')
    op.drop_table('jobs')
    op.drop_index(op.f('ix_driver_locations_id'), table_name='driver_locations')
    op.drop_table('driver_locations')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_drivers_id'), table_name='drivers')
    op.drop_table('drivers')
    op.drop_index(op.f('ix_customers_name'), table_name='customers')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_email'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_api_keys_name'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    # ### end Alembic commands ###
